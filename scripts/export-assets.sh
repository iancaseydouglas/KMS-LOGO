#!/bin/bash

# ----------------------------
# üß© Default Configuration
# ----------------------------
_svg_export_default_input="logo.svg"
_svg_export_default_sizes=(
  16 32 64 128 256       # Icons
  320 480 640 768        # Mobile & tablet
  1024 1280 1440 1600    # Desktop
  1920 2560 3840         # HD, 2K, 4K
)
_svg_export_default_formats=("png" "webp")
_svg_export_default_outdir="exports"
_svg_export_default_split_dirs=true
_svg_export_default_basename=""

# ----------------------------
# üß© Internal Helper Functions
# ----------------------------

_svg_export_parse_args() {
  INPUT="$_svg_export_default_input"
  SIZES=("${_svg_export_default_sizes[@]}")
  FORMATS=("${_svg_export_default_formats[@]}")
  OUTDIR="$_svg_export_default_outdir"
  SPLIT_DIRS=$_svg_export_default_split_dirs
  BASENAME="$_svg_export_default_basename"

  while [[ $# -gt 0 ]]; do
    case "$1" in
      -i|--input) INPUT="$2"; shift 2 ;;
      -s|--sizes) IFS=',' read -ra SIZES <<< "$2"; shift 2 ;;
      -f|--formats) IFS=',' read -ra FORMATS <<< "$2"; shift 2 ;;
      -o|--outdir) OUTDIR="$2"; shift 2 ;;
      -b|--basename) BASENAME="$2"; shift 2 ;;
      -F|--flat) SPLIT_DIRS=false; shift ;;
      -h|--help) _svg_export_show_help; exit 0 ;;
      *) echo "‚ùå Unknown option: $1"; _svg_export_show_help; exit 1 ;;
    esac
  done

  # If no basename provided, derive from input file
  if [[ -z "$BASENAME" ]]; then
    BASENAME="$(basename "$INPUT" .svg)"
  fi
}

_svg_export_show_help() {
  cat <<EOF
Usage: export-assets.sh [OPTIONS]

Batch export an SVG file to multiple sizes in PNG and WebP formats.
Designed for web designers, developers, and anyone needing responsive assets.

Options:
  -i, --input <file>        Input SVG file (default: logo.svg)
  -s, --sizes <list>        Comma-separated list of widths in pixels
                            Default: 16,32,64,128,256,320,480,640,768,
                                     1024,1280,1440,1600,1920,2560,3840
  -f, --formats <list>      Comma-separated list of output formats
                            Supported: png, webp
                            Default: png,webp
  -o, --outdir <dir>        Output directory (default: exports)
  -b, --basename <name>     Base name for output files (default: input filename)
  -F, --flat                Export all files to a single directory (override split)
  -h, --help                Show this help message and exit

Examples:
  # Export logo.svg to default sizes in PNG and WebP
  ./export-assets.sh

  # Export to PNG only, using custom sizes
  ./export-assets.sh -i brandmark.svg -s 128,256,512 -f png

  # Export to separate folders: exports/png/, exports/webp/
  ./export-assets.sh

  # Export to a custom folder with only WebP format
  ./export-assets.sh -f webp -o assets

  # Use short flags for quick export
  ./export-assets.sh -i icon.svg -s 64,128 -f png

Notes:
  - WebP files are generated by converting PNGs using ImageMagick or cwebp.
  - Requires Inkscape CLI and either ImageMagick or cwebp installed and in your PATH.

Happy exporting!
EOF
}

_svg_export_create_output_dirs() {
  mkdir -p "$OUTDIR"
  if $SPLIT_DIRS; then
    for format in "${FORMATS[@]}"; do
      mkdir -p "$OUTDIR/$format"
    done
  fi
}

_svg_export_export_png() {
  local size="$1"
  local subdir="$OUTDIR"
  if $SPLIT_DIRS; then
    subdir="$OUTDIR/png"
  fi
  local outfile="$subdir/${BASENAME}-${size}.png"

  echo "üñºÔ∏è  Exporting PNG $size px ‚Üí $outfile"
  inkscape "$INPUT" \
    --export-type=png \
    --export-width="$size" \
    --export-filename="$outfile"
}

_svg_export_convert_to_webp() {
  local size="$1"
  local png_subdir="$OUTDIR"
  local webp_subdir="$OUTDIR"
  if $SPLIT_DIRS; then
    png_subdir="$OUTDIR/png"
    webp_subdir="$OUTDIR/webp"
  fi

  local png_file="$png_subdir/${BASENAME}-${size}.png"
  local webp_file="$webp_subdir/${BASENAME}-${size}.webp"

  if command -v cwebp >/dev/null 2>&1; then
    echo "üóúÔ∏è  Converting to WebP ‚Üí $webp_file"
    cwebp -quiet -q 90 "$png_file" -o "$webp_file"
  elif command -v convert >/dev/null 2>&1; then
    echo "üóúÔ∏è  Converting to WebP ‚Üí $webp_file"
    convert "$png_file" "$webp_file"
  else
    echo "‚ö†Ô∏è  WebP conversion skipped: no cwebp or convert found"
  fi
}

_svg_export_run_exports() {
  for size in "${SIZES[@]}"; do
    if [[ " ${FORMATS[*]} " =~ " png " ]]; then
      _svg_export_export_png "$size"
    fi
    if [[ " ${FORMATS[*]} " =~ " webp " ]]; then
      _svg_export_convert_to_webp "$size"
    fi
  done
  echo "‚úÖ All exports complete!"
}

# ----------------------------
# üöÄ Public Entry Point
# ----------------------------

run_svg_export() {
  _svg_export_parse_args "$@"
  _svg_export_create_output_dirs
  _svg_export_run_exports
}

# ----------------------------
# üõ°Ô∏è Execution Guard
# ----------------------------

if [[ "${BASH_SOURCE[0]}" == "$0" ]]; then
  run_svg_export "$@"
fi
